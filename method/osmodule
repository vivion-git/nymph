about the three listing techniques,'os.popen' and 'glob.glob' and
'os.listdir',how to use them and how to distinct them .
1)os.popen:
>>> os.popen('ls *.html').readlines( )
['about-pp.html\n', 'about-pp2e.html\n', 'about-ppr2e.html\n']
sorts names and returns end-of-lines.
2)glob.glob:
>>> import glob
>>> glob.glob('*')
['about-pp.html', 'python1.5.tar.gz', 'about-pp2e.html', 'about-ppr2e.html',
'newdir']

>>> glob.glob('*.html')
['about-pp.html', 'about-pp2e.html', 'about-ppr2e.html']

>>> glob.glob('newdir/*')
['newdir\\temp1', 'newdir\\temp2', 'newdir\\temp3', 'newdir\\more']
>>> for name in glob.glob(r'*\*\visitor_find*.py'): print name
...
cpexamples\PyTools\visitor_find.py
cpexamples\PyTools\visitor_find_quiet2.py
cpexamples\PyTools\visitor_find_quiet1.py
examples\PyTools\visitor_find.py
examples\PyTools\visitor_find_quiet2.py
examples\PyTools\visitor_find_quiet1.py

accepts a pattern('*') and returns filenames with directory prefixes


3)os.listdir:
>>> os.listdir('.')
['about-pp.html', 'python1.5.tar.gz', 'about-pp2e.html', 'about-ppr2e.html',
'newdir']

>>> os.listdir(os.curdir)
['about-pp.html', 'python1.5.tar.gz', 'about-pp2e.html', 'about-ppr2e.html',
'newdir']

>>> os.listdir('newdir')
['temp1', 'temp2', 'temp3', 'more']
 takes a simple directory name and returns names without directory prefixes

****there are three method ,compare their result and distinct them.****
print open('sta.py').read()
x=5
l=[]
for i in range(7):
    l.append(2**i)
print l    
if (2**x) in l:
    print (2**x),'was found',l.index(2**x)
else:
    print x,'not found'

when we use the file method,the result is reading the context of the file.

use the os.system is running the file and display the result.
>>> import os
>>> os.system('python sta.py')
[1, 2, 4, 8, 16, 32, 64]
32 was found 5

use the os.popen is also running the file but can not display the result ,if
we want to display the result ,use print and read().
>>> result=os.popen('python sta.py').read()
>>> print result
[1, 2, 4, 8, 16, 32, 64]
32 was found 5


