this is my test:

    import vi
    I can understand
    >>> dir(vi)
    ['__builtins__', '__doc__', '__file__', '__name__', '__package__', 'f1']
    >>> print vi._doc_
    Traceback (most recent call last):
      File "<stdin>", line 1, in <module>
    AttributeError: 'module' object has no attribute '_doc_'
    >>> print vi.f1_doc_
    Traceback (most recent call last):
      File "<stdin>", line 1, in <module>
    AttributeError: 'module' object has no attribute 'f1_doc_'
    >>> vim vi      
      File "<stdin>", line 1
        vim vi  
             ^
    SyntaxError: invalid syntax
    >>> print vi.__file__
    vi.pyc
    >>> print vi.f1.__doc__
    this is a document
    >>> print vi.f1.__name__
    f1

when we use the module,first ,we should import this module,and then we can
invoke it ."dir"used to check the information of the module ."__doc__"used to
check the docstring.to mind that the formate of using "__doc__".

**about reload()
reload is always used with the"import",first ,import module and then make some
changes in module file ,and reload it .but if you use "from"statement ,there
will be some complex things to think about .so ,you should not expect reload
and from to play together nicely.
** 
----------------------
note:run the file safe.py
import sys, traceback
def safe(entry,*args):
    try:
         apply(entry,args)
    except:
         traceback.print_exc()
         print 'got',sys.exc_type,sys.exc_value
import oops
safe(oops.oops)

when I run the file (safe.py),the result is down:
vivion@vivion-laptop:~/nymph/misc$ python safe.py
Traceback (most recent call last):
  File "safe.py", line 5, in safe
    apply(entry,args)
  File "/home/vivion/nymph/misc/oops.py", line 8, in oops
    raise  myerro('hello')
myerro: myerror.value is hello        #the result of the function :traceback.print_exc()
got oops.myerro myerror.value is hello   
 #disply the result of the function sys.exc_type:oops.myerro ;disply the
result of the function sys.exc_value:myerror.value is hello 

If I use the function sys.exc_info()[0] and sys.exc_info()[1] instead of
sys.exc_type and sys.exc_value ,the result is the same.


another import thing I should know that not using the keyword to name the file
,if that,I will not import the module succesfully,there will be error
displayed.for exmple:
File "error.py", line 9
    import except
                ^
SyntaxError: invalid syntax
"except"is a keyword ,so there is an error information.change the file name
,it will be right.
